"use strict";
var d = require("debug");
var postcss_1 = require("postcss");
var postCssValuesParser = require("postcss-values-parser");
var isUrl = require("is-url");
var debug = d('detective-postcss');
function parseValue(value) {
    return postCssValuesParser(value).parse().first;
}
function getValueOrUrl(node) {
    var ret;
    if (isUrlNode(node)) {
        // ['(', 'file', ')']
        ret = node.nodes[1].value;
    }
    else {
        ret = node.value;
    }
    return !isUrl(ret) && ret;
}
function isUrlNode(node) {
    return node.type === 'func' && node.value === 'url';
}
function isValueRule(rule) {
    return rule.name === 'value';
}
function isImportRule(rule) {
    return rule.name === 'import';
}
module.exports = function (src) {
    var references = [];
    var root = postcss_1.parse(src);
    root.walkAtRules(function (rule) {
        var file = null;
        if (isImportRule(rule)) {
            var firstNode = parseValue(rule.params).first;
            file = getValueOrUrl(firstNode);
            if (file) {
                debug("found %s of %s", '@import', file);
            }
        }
        if (isValueRule(rule)) {
            var lastNode = parseValue(rule.params).last;
            file = getValueOrUrl(lastNode);
            if (file) {
                debug("found %s of %s", '@value with import', file);
            }
        }
        file && references.push(file);
    });
    return references;
};

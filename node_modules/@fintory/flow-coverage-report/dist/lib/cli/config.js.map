{"version":3,"sources":["../../../src/lib/cli/config.js"],"names":["loadConfig","validateConfig","UsageError","message","name","Error","toArray","value","Array","isArray","defaultConfig","reportTypes","flowCommandPath","projectDir","path","resolve","process","cwd","globExcludePatterns","threshold","outputDir","concurrentFiles","strictCoverage","excludeNonFlow","noConfig","htmlTemplateOptions","autoHeightSource","showMeterBar","getProjectDir","config","normalizedConfig","includeGlobs","console","warn","globIncludePatterns","excludeGlobs","type","args","Object","keys","key","includeGlob","filePath","fileRawData","fs","readFileSync","fileConfigData","String","env","VERBOSE","log","packageJSONPath","join","pkg","require","err","error","projectConfigPath","projectConfigRaw","projectConfigData","raiseErrorIfArray","msg","preventDuplicatedOptions","option","length","glob"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;QA8EgBA,U,GAAAA,U;QAgGAC,c,GAAAA,c;;AA7KhB;;;;AACA;;;;AACA;;;;AACA;;;;;;IAEaC,U,WAAAA,U;;;AACX,sBAAYC,OAAZ,EAA6B;AAAA;;AAAA,sIACrBA,OADqB;;AAE3B,UAAKC,IAAL,GAAY,YAAZ;AAF2B;AAG5B;;;EAJ6BC,K;;AAOhC,IAAMC,UAAU,SAAVA,OAAU,CAACC,KAAD;AAAA,SAA4BC,MAAMC,OAAN,CAAcF,KAAd,IAAuBA,KAAvB,GAA+B,CAACA,KAAD,CAA3D;AAAA,CAAhB;;AAEO,IAAMG,wCAAgB;AAC3BC,eAAa,CAAC,MAAD,CADc;AAE3BC,mBAAiB,MAFU;AAG3BC,cAAYC,eAAKC,OAAL,CAAaC,QAAQC,GAAR,EAAb,CAHe;AAI3BC,uBAAqB,CAAC,iBAAD,CAJM;AAK3BC,aAAW,EALgB;AAM3BC,aAAW,iBANgB;AAO3BC,mBAAiB,CAPU;AAQ3BC,kBAAgB,KARW;AAS3BC,kBAAgB,KATW;AAU3BC,YAAU,KAViB;AAW3BC,uBAAqB;AACnBC,sBAAkB,IADC;AAEnBC,kBAAc;AAFK;AAXM,CAAtB;;AAiBP,IAAMC,gBAAgB,SAAhBA,aAAgB,CAACC,MAAD,EAA4B;AAAA,yDACtBnB,aADsB,EACJmB,MADI;AAAA,MACzChB,UADyC,yBACzCA,UADyC;;AAGhD,MAAI,CAACA,UAAL,EAAiB;AACf,UAAM,IAAIX,UAAJ,CAAe,gCAAf,CAAN;AACD;;AAED,MAAI,OAAOW,UAAP,KAAsB,QAA1B,EAAoC;AAClC,UAAM,IAAIX,UAAJ,CAAe,yCAAf,CAAN;AACD;;AAED,SAAOW,UAAP;AACD,CAZD;;AAcA;;;;;;AAMA,SAASiB,gBAAT,CAA0BD,MAA1B,EAAkD;AAChD,MAAIA,OAAOE,YAAX,EAAyB;AACvBC,YAAQC,IAAR,CAAa,iFAAb;AACAJ,WAAOK,mBAAP,GAA6BL,OAAOE,YAApC;AACD;;AAED,MAAIF,OAAOM,YAAX,EAAyB;AACvBH,YAAQC,IAAR,CAAa,iFAAb;AACAJ,WAAOX,mBAAP,GAA6BW,OAAOM,YAApC;AACD;;AAED,MAAIN,OAAOO,IAAX,EAAiB;AACfJ,YAAQC,IAAR,CAAa,iEAAb;AACAJ,WAAOlB,WAAP,GAAqBkB,OAAOO,IAA5B;AACD;;AAED,SAAOP,MAAP;AACD;;AAED;;;;;;;AAOO,SAAS7B,UAAT,CAAoBqC,IAApB,EAA0C;AAC/C;AAD+C;AAAA;AAAA;;AAAA;AAE/C,yBAAkBC,OAAOC,IAAP,CAAYF,IAAZ,CAAlB,8HAAqC;AAAA,UAA1BG,GAA0B;;AACnC,UAAI,OAAOH,KAAKG,GAAL,CAAP,KAAqB,WAAzB,EAAsC;AACpC,eAAOH,KAAKG,GAAL,CAAP;AACD;AACF;AAN8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQ/C,MAAIH,KAAKb,QAAT,EAAmB;AACjB,sCACKd,aADL,EAEK2B,IAFL;AAID;;AAED,MAAIA,KAAKI,WAAT,EAAsB;AACpBJ,SAAKI,WAAL,GAAmBnC,QAAQ+B,KAAKI,WAAb,CAAnB;AACD;;AAED,MAAIJ,KAAKH,mBAAT,EAA8B;AAC5BG,SAAKH,mBAAL,GAA2B5B,QAAQ+B,KAAKH,mBAAb,CAA3B;AACD;;AAED,MAAIG,KAAKR,MAAT,EAAiB;AACf,QAAMa,WAAW5B,eAAKC,OAAL,CAAasB,KAAKR,MAAlB,CAAjB;AACA,QAAMc,cAAcC,aAAGC,YAAH,CAAgBH,QAAhB,CAApB;AACA,QAAMI,iBAAiB,yBAAU,iCAAkBC,OAAOJ,WAAP,CAAlB,CAAV,CAAvB;;AAEA,QAAI3B,QAAQgC,GAAR,CAAYC,OAAhB,EAAyB;AACvBjB,cAAQkB,GAAR,CAAY,yBAAZ,EAAuCR,QAAvC,EAAiDI,cAAjD;AACD;;AAED,sCACKpC,aADL,EAEKoB,iBAAiBgB,cAAjB,CAFL,EAGKT,IAHL;AAKD;;AAED,MAAIc,wBAAJ;;AAEA,MAAI;AACFA,sBAAkBrC,eAAKC,OAAL,CAAaD,eAAKsC,IAAL,CAAUxB,cAAcS,IAAd,CAAV,EAA+B,cAA/B,CAAb,CAAlB;AACA;AACA,QAAMgB,MAAMC,QAAQH,eAAR,CAAZ,CAHE,CAGoC;AACtC,QAAIE,IAAI,sBAAJ,CAAJ,EAAiC;AAC/B,UAAIrC,QAAQgC,GAAR,CAAYC,OAAhB,EAAyB;AACvBjB,gBAAQkB,GAAR,CAAY,iCAAZ,EAA+CG,IAAI,sBAAJ,CAA/C;AACD;;AAED,wCACK3C,aADL,EAEKoB,iBAAiBuB,IAAI,sBAAJ,CAAjB,CAFL,EAGKhB,IAHL;AAKD;AACF,GAfD,CAeE,OAAOkB,GAAP,EAAY;AACZ,QAAIvC,QAAQgC,GAAR,CAAYC,OAAhB,EAAyB;AACvBjB,cAAQwB,KAAR,CAAc,iDAAd,EAAiEL,eAAjE,EAAkFI,GAAlF;AACD;AACF;;AAED,MAAIE,0BAAJ;;AAEA,MAAI;AACFA,wBAAoB3C,eAAKC,OAAL,CAAaD,eAAKsC,IAAL,CAAUxB,cAAcS,IAAd,CAAV,EAA+B,4BAA/B,CAAb,CAApB;AACA,QAAMqB,mBAAmBd,aAAGC,YAAH,CAAgBY,iBAAhB,CAAzB;AACA,QAAME,oBAAoB,yBAAU,iCAAkBZ,OAAOW,gBAAP,CAAlB,CAAV,CAA1B;;AAEA,QAAI1C,QAAQgC,GAAR,CAAYC,OAAhB,EAAyB;AACvBjB,cAAQkB,GAAR,CAAY,gCAAZ,EAA8CO,iBAA9C,EAAiEE,iBAAjE;AACD;;AAED,sCACKjD,aADL,EAEKoB,iBAAiB6B,iBAAjB,CAFL,EAGKtB,IAHL;AAKD,GAdD,CAcE,OAAOkB,GAAP,EAAY;AACZ,QAAIvC,QAAQgC,GAAR,CAAYC,OAAhB,EAAyB;AACvBjB,cAAQwB,KAAR,CAAc,iCAAd,EAAiDC,iBAAjD,EAAoEF,GAApE;AACD;AACF;;AAED,oCACK7C,aADL,EAEK2B,IAFL;AAID;;AAED;;;;;;AAMO,SAASpC,cAAT,CAAwBoC,IAAxB,EAA8C;AACnD,WAASuB,iBAAT,CAA2BrD,KAA3B,EAAkCsD,GAAlC,EAAuC;AACrC,QAAIrD,MAAMC,OAAN,CAAcF,KAAd,CAAJ,EAA0B;AACxB,YAAM,IAAIL,UAAJ,sBAAkC2D,GAAlC,wBAAN;AACD;AACF;;AAED,MAAMC,2BAA2B;AAC/BjD,gBAAY,aADmB;AAE/BO,eAAW,YAFoB;AAG/BD,eAAW,WAHoB;AAI/BP,qBAAiB,cAJc;AAK/BS,qBAAiB;AALc,GAAjC;;AAPmD;AAAA;AAAA;;AAAA;AAenD,0BAAqBiB,OAAOC,IAAP,CAAYuB,wBAAZ,CAArB,mIAA4D;AAAA,UAAjDC,MAAiD;;AAC1D,UAAMF,MAAMC,yBAAyBC,MAAzB,CAAZ;AACAH,wBAAkBvB,KAAK0B,MAAL,CAAlB,EAAgCF,GAAhC;AACD;AAlBkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,MAoB5C3B,mBApB4C,GAoBrBG,IApBqB,CAoB5CH,mBApB4C;;AAqBnD,MAAI,CAACA,mBAAD,IAAwBA,oBAAoB8B,MAApB,KAA+B,CAAvD,IACA,CAAC9B,oBAAoB,CAApB,CADL,EAC6B;AAC3B,UAAM,IAAIhC,UAAJ,CAAe,oCAAf,CAAN;AACD;;AAxBkD;AAAA;AAAA;;AAAA;AA0BnD,0BAAmBgC,mBAAnB,mIAAwC;AAAA,UAA7B+B,IAA6B;;AACtC,UAAIA,KAAK,CAAL,MAAY,GAAhB,EAAqB;AACnB,cAAM,IAAI/D,UAAJ,CAAe,gDAAf,CAAN;AACD;AACF;AA9BkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgCnD,SAAOmC,IAAP;AACD","file":"config.js","sourcesContent":["// @flow\nimport path from 'path';\nimport fs from 'fs';\nimport parseJSON from 'parse-json';\nimport stripJSONComments from 'strip-json-comments';\n\nexport class UsageError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'UsageError';\n  }\n}\n\nconst toArray = (value: any): Array<any> => Array.isArray(value) ? value : [value];\n\nexport const defaultConfig = {\n  reportTypes: ['text'],\n  flowCommandPath: 'flow',\n  projectDir: path.resolve(process.cwd()),\n  globExcludePatterns: ['node_modules/**'],\n  threshold: 80,\n  outputDir: './flow-coverage',\n  concurrentFiles: 1,\n  strictCoverage: false,\n  excludeNonFlow: false,\n  noConfig: false,\n  htmlTemplateOptions: {\n    autoHeightSource: true,\n    showMeterBar: false\n  }\n};\n\nconst getProjectDir = (config: Object): string => {\n  const {projectDir} = ({...defaultConfig, ...config});\n\n  if (!projectDir) {\n    throw new UsageError('projectDir option is mandatory');\n  }\n\n  if (typeof projectDir !== 'string') {\n    throw new UsageError('Unexpected non-string projectDir option');\n  }\n\n  return projectDir;\n};\n\n/**\n * Normalize config properties to match the property name used internally\n * when it has multiple aliases.\n *\n * @param {object} config\n */\nfunction normalizedConfig(config: Object): Object {\n  if (config.includeGlobs) {\n    console.warn('WARN: includeGlobs config file property has been renamed to globIncludePatterns');\n    config.globIncludePatterns = config.includeGlobs;\n  }\n\n  if (config.excludeGlobs) {\n    console.warn('WARN: excludeGlobs config file property has been renamed to globExcludePatterns');\n    config.globExcludePatterns = config.excludeGlobs;\n  }\n\n  if (config.type) {\n    console.warn('WARN: type config file property has been renamed to reportTypes');\n    config.reportTypes = config.type;\n  }\n\n  return config;\n}\n\n/**\n * Try to load configuration parameters from the project dir if the following order:\n * - do not load any config if --no-config option is specified\n * - from the package.json \"flow-coverage-report\" property, if any\n * - from a .flow-coverage-report.json, if any\n * - from the --config cli parameter, if any\n */\nexport function loadConfig(args: Object): Object {\n  // Remove any undefined property from the yargs object.\n  for (const key of Object.keys(args)) {\n    if (typeof args[key] === 'undefined') {\n      delete args[key];\n    }\n  }\n\n  if (args.noConfig) {\n    return {\n      ...defaultConfig,\n      ...args\n    };\n  }\n\n  if (args.includeGlob) {\n    args.includeGlob = toArray(args.includeGlob);\n  }\n\n  if (args.globIncludePatterns) {\n    args.globIncludePatterns = toArray(args.globIncludePatterns);\n  }\n\n  if (args.config) {\n    const filePath = path.resolve(args.config);\n    const fileRawData = fs.readFileSync(filePath);\n    const fileConfigData = parseJSON(stripJSONComments(String(fileRawData)));\n\n    if (process.env.VERBOSE) {\n      console.log('Loaded config from file', filePath, fileConfigData);\n    }\n\n    return {\n      ...defaultConfig,\n      ...normalizedConfig(fileConfigData),\n      ...args\n    };\n  }\n\n  let packageJSONPath;\n\n  try {\n    packageJSONPath = path.resolve(path.join(getProjectDir(args), 'package.json'));\n    // $FlowIgnoreMe: the following dynamic require loads only the package.json file.\n    const pkg = require(packageJSONPath); // eslint-disable-line import/no-dynamic-require\n    if (pkg['flow-coverage-report']) {\n      if (process.env.VERBOSE) {\n        console.log('Loaded config from package.json', pkg['flow-coverage-report']);\n      }\n\n      return {\n        ...defaultConfig,\n        ...normalizedConfig(pkg['flow-coverage-report']),\n        ...args\n      };\n    }\n  } catch (err) {\n    if (process.env.VERBOSE) {\n      console.error('Unable to load config from project package.json', packageJSONPath, err);\n    }\n  }\n\n  let projectConfigPath;\n\n  try {\n    projectConfigPath = path.resolve(path.join(getProjectDir(args), '.flow-coverage-report.json'));\n    const projectConfigRaw = fs.readFileSync(projectConfigPath);\n    const projectConfigData = parseJSON(stripJSONComments(String(projectConfigRaw)));\n\n    if (process.env.VERBOSE) {\n      console.log('Loaded config from project dir', projectConfigPath, projectConfigData);\n    }\n\n    return {\n      ...defaultConfig,\n      ...normalizedConfig(projectConfigData),\n      ...args\n    };\n  } catch (err) {\n    if (process.env.VERBOSE) {\n      console.error('Unable to load config from file', projectConfigPath, err);\n    }\n  }\n\n  return {\n    ...defaultConfig,\n    ...args\n  };\n}\n\n/**\n * Validate the arguments collected from the command line and config files and\n * ensure that it is a valid FlowCoverageReportOptions object (as described by its\n * flow type declaration in the \"src/lib/index.js module\")\n */\n\nexport function validateConfig(args: Object): Object {\n  function raiseErrorIfArray(value, msg) {\n    if (Array.isArray(value)) {\n      throw new UsageError(`ERROR: Only one ${msg} can be specified.`);\n    }\n  }\n\n  const preventDuplicatedOptions = {\n    projectDir: 'project dir',\n    outputDir: 'output dir',\n    threshold: 'threshold',\n    flowCommandPath: 'flow command',\n    concurrentFiles: '--concurrent-files option'\n  };\n\n  for (const option of Object.keys(preventDuplicatedOptions)) {\n    const msg = preventDuplicatedOptions[option];\n    raiseErrorIfArray(args[option], msg);\n  }\n\n  const {globIncludePatterns} = args;\n  if (!globIncludePatterns || globIncludePatterns.length === 0 ||\n      !globIncludePatterns[0]) {\n    throw new UsageError('ERROR: No glob has been specified.');\n  }\n\n  for (const glob of globIncludePatterns) {\n    if (glob[0] === '!') {\n      throw new UsageError('ERROR: Only include glob syntax are supported.');\n    }\n  }\n\n  return args;\n}\n"]}